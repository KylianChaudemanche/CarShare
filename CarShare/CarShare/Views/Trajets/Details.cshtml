@model CarShare.BO.Trajet

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Trajet</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Date)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Date)
        </dd>

    </dl>

    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Depart)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Depart.Intitule)
        </dd>

    </dl>

    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Arrive)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Arrive.Intitule)
        </dd>

    </dl>

    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Conducteur)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Conducteur.Prenom)
            @Html.DisplayFor(model => model.Conducteur.Nom)
        </dd>

    </dl>


    <dl class="dl-horizontal">
        @{
            if (Model.Passagers != null)
            {
                <dt>
                    @Html.DisplayNameFor(model => model.Passagers)
                </dt>

            }
        }

        @{
            foreach (var passager in Model.Passagers)
            {
                <dd>
                    - @Html.DisplayFor(model => passager.Prenom) @Html.DisplayFor(model => passager.Nom)
                </dd>
            }
        }
    </dl>


</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>

<div id="mapid" class="col-md-10 text-center" style="width: 1200px; height: 400px;"></div>

<script>
    // Initialisation de la carte LeafLet
    var lat = "@Model.Arrive.Latitude ".replace(",", ".");
    var long = "@Model.Arrive.Longitude ".replace(",", ".");

    var mymap = L.map('mapid').setView([lat, long], 13);


    L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
    maxZoom: 18,
    id: 'mapbox.streets',
    accessToken: 'pk.eyJ1IjoibWF4bWlsbCIsImEiOiJjanh6cnpsMzYwNWNiM21xdGYzaHRpdGc1In0.wmuiU2IKrhNuUb_uRCas1g'
    }).addTo(mymap);


    // Ajouts de Marqueurs fixes sur la map
    @for(int i =0; i<Model.Arrets.Count; i++)
    {
        @:var marker = L.marker([@Model.Arrets[i].Emplacement.Latitude, @Model.Arrets[i].Emplacement.Longitude]).addTo(mymap);
        @:marker.bindPopup("<b>Arret @i</b><br><b>Latitude: </b>@Model.Arrets[i].Emplacement.Latitude<br><b>Longitude: </b>@Model.Arrets[i].Emplacement.Longitude");
    }

    // Lors d'un clique sur la carte : affiche les coordonées et propose de demander un arret
    var popup = L.popup();
    function onMapClick(e) {
        popup
            .setLatLng(e.latlng)
            .setContent(e.latlng.lat + ", " + e.latlng.lng + "<br><button id=\"demanderArret\" data-lat=\"" + e.latlng.lat + "\" data-lng=\"" + e.latlng.lng + "\" onClick=\"demanderArret()\">Demander arret</button>")
            .openOn(mymap);
    }
    mymap.on('click', onMapClick);


    // Configuration du routing avec Leaflet Routing Machine (plugin)
    var depart = L.latLng(@Model.Depart.Latitude, @Model.Depart.Longitude);
    var arrivee = L.latLng(@Model.Arrive.Latitude, @Model.Arrive.Longitude);

    var routeControl = L.Routing.control({
        waypoints: [
            depart,
            // liste d'arrets ordonnées
            arrivee
        ],
        show: false, // cache la feuille de route
        language: 'fr',
        draggableWaypoints: false,
        routeWhileDragging: true,
        addWaypoints: false,
        reverseWaypoints: true,
        router: L.Routing.mapbox('pk.eyJ1IjoibWF4bWlsbCIsImEiOiJjanh6cnpsMzYwNWNiM21xdGYzaHRpdGc1In0.wmuiU2IKrhNuUb_uRCas1g')
    }).addTo(mymap);



    /*
     * Fonction pour demander un arret.
     * Envoi les coordonnées géo de l'arret au serveur
     */

    function demanderArret() {
        var bouton = document.getElementById("demanderArret")
        var nouvelArret = L.latLng(bouton.dataset.lat, bouton.dataset.lng)
        alert("Vous avez demandé un arret ici: " + nouvelArret.toString());
        mymap.closePopup();
    }

     // Permet d'obtenir la distance et le temps de trajet d'un itinéraire
    /*
        routeControl.on('routesfound', function (e) {
            var routes = e.routes;
            var summary = routes[0].summary;

            console.log('Total distance is ' + summary.totalDistance / 1000 + ' km and total time is ' + Math.round(summary.totalTime % 3600 / 60) + ' minutes');
        });
        return distance;
    */

</script>